// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_next_feed_to_fetch.sql

package database

import (
	"context"
	"database/sql"
)

const getNextFeedToFetch = `-- name: GetNextFeedToFetch :one
SELECT id, last_fetched_at, url
FROM feeds
ORDER BY last_fetched_at NULLS FIRST
LIMIT 1
`

type GetNextFeedToFetchRow struct {
	ID            int32
	LastFetchedAt sql.NullTime
	Url           string
}

func (q *Queries) GetNextFeedToFetch(ctx context.Context) (GetNextFeedToFetchRow, error) {
	row := q.db.QueryRowContext(ctx, getNextFeedToFetch)
	var i GetNextFeedToFetchRow
	err := row.Scan(&i.ID, &i.LastFetchedAt, &i.Url)
	return i, err
}
