// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_feeds.sql

package database

import (
	"context"
	"database/sql"
)

const getAllFeeds = `-- name: GetAllFeeds :many
SELECT feeds.name, feeds.url, users.name AS username
FROM feeds
LEFT JOIN users
ON feeds.user_id = users.id
GROUP BY feeds.name, feeds.url, username
`

type GetAllFeedsRow struct {
	Name     string
	Url      string
	Username sql.NullString
}

func (q *Queries) GetAllFeeds(ctx context.Context) ([]GetAllFeedsRow, error) {
	rows, err := q.db.QueryContext(ctx, getAllFeeds)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAllFeedsRow
	for rows.Next() {
		var i GetAllFeedsRow
		if err := rows.Scan(&i.Name, &i.Url, &i.Username); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
